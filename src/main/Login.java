/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

/**
 *
 * @author aakash
 */

class AESCrypt 
{
    private static final String ALGORITHM = "AES";
    private static final String KEY = "1Hbfh667adfDEJ78";
    
    public static String encrypt(String value) throws Exception
    {
        Key key = generateKey();
        Cipher cipher = Cipher.getInstance(AESCrypt.ALGORITHM);
        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte [] encryptedByteValue = cipher.doFinal(value.getBytes("utf-8"));
        String encryptedValue64 = new BASE64Encoder().encode(encryptedByteValue);
        return encryptedValue64;
               
    }
    
    public static String decrypt(String value) throws Exception
    {
        Key key = generateKey();
        Cipher cipher = Cipher.getInstance(AESCrypt.ALGORITHM);
        cipher.init(Cipher.DECRYPT_MODE, key);
        byte [] decryptedValue64 = new BASE64Decoder().decodeBuffer(value);
        byte [] decryptedByteValue = cipher.doFinal(decryptedValue64);
        String decryptedValue = new String(decryptedByteValue,"utf-8");
        return decryptedValue;
                
    }
    
    private static Key generateKey() throws Exception 
    {
        Key key = new SecretKeySpec(AESCrypt.KEY.getBytes(),AESCrypt.ALGORITHM);
        return key;
    }
}

public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        Username_TextField.setText(null);
        Password_PasswordField.setText(null);
    }
    
        Connection con = null;
        //Statement st = null;
        ResultSet rs = null;
        String s;
   
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Username_Label = new javax.swing.JLabel();
        Password_Label = new javax.swing.JLabel();
        Username_TextField = new javax.swing.JTextField();
        Password_PasswordField = new javax.swing.JPasswordField();
        SignUp_Label = new javax.swing.JLabel();
        Register_Label = new javax.swing.JLabel();
        Img_Label = new javax.swing.JLabel();
        Login_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Username_Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        Username_Label.setText("Username:");

        Password_Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        Password_Label.setText("Password:");

        Username_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Username_TextFieldActionPerformed(evt);
            }
        });

        Password_PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Password_PasswordFieldActionPerformed(evt);
            }
        });

        SignUp_Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        SignUp_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/signup.png"))); // NOI18N
        SignUp_Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUp_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUp_LabelMouseClicked(evt);
            }
        });

        Register_Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        Register_Label.setText("Not Registered Yet?");

        Img_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/healthcare-1024x410.png"))); // NOI18N

        Login_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/login.png"))); // NOI18N
        Login_Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Login_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Login_LabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Img_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Password_Label)
                            .addComponent(Username_Label)
                            .addComponent(Password_PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(Username_TextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Register_Label)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(SignUp_Label))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(Login_Label)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Img_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Username_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Username_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password_PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Login_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(Register_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SignUp_Label)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String usr = null;
    
    private void Username_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Username_TextFieldActionPerformed
        usr =  Username_TextField.getText();
    }//GEN-LAST:event_Username_TextFieldActionPerformed

    String pass = null;
    String gp = null;
    private void Password_PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Password_PasswordFieldActionPerformed
        pass = Password_PasswordField.getText();
//        try {
//            MessageDigest md = MessageDigest.getInstance("MD5");
//            md.update(pass.getBytes());
//            byte[] bytes = md.digest();
//            StringBuilder sb = new StringBuilder();
//            for(int i=0; i< bytes.length ;i++)
//            {
//                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
//            }
//            gp = sb.toString();
//        } catch (NoSuchAlgorithmException ex) {
//            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
//        }
        
        
        
    }//GEN-LAST:event_Password_PasswordFieldActionPerformed

    private void SignUp_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUp_LabelMouseClicked
        SignUp su = new SignUp();
        su.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_SignUp_LabelMouseClicked

    private void Login_LabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Login_LabelMousePressed
        usr =  Username_TextField.getText();
        pass = Password_PasswordField.getText();
        int flag = 0;
        if(usr == null)
        {
            flag = 1;
        }
        else if(pass == null)
        {
            flag = 2;
        }
        else if(usr == null && pass == null)
        {
            flag = 3;
        }
            try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/healthfirst","root","abbh07@6718");
            Statement stmt = con.createStatement();
            //String sql = "insert into login values('"+usr+"','"+gp+"');";
            //stmt.executeUpdate(sql);
            rs = stmt.executeQuery("Select password from login where username = '"+usr+"';");
            while(rs.next())
            {
               String dp = AESCrypt.decrypt(rs.getString("password"));
               if(dp.equals(pass))
               {
                   //View main menu
                   flag = 1;
                   Index i = new Index(usr);
                   i.setVisible(true);
                   this.setVisible(false);
               }
            }
            if(flag == 0)
            {
                JOptionPane.showMessageDialog(null, "Invalid Username/Password");
            }
            else if(flag == 1)
            {
                JOptionPane.showMessageDialog(null,"Enter your Username!");
            }
            else if(flag == 2)
            {
                JOptionPane.showMessageDialog(null, "Enter your Password!");
            }
            else if(flag == 3)
            {
                JOptionPane.showMessageDialog(null, "Enter your Username and Password!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_Login_LabelMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Img_Label;
    private javax.swing.JLabel Login_Label;
    private javax.swing.JLabel Password_Label;
    private javax.swing.JPasswordField Password_PasswordField;
    private javax.swing.JLabel Register_Label;
    private javax.swing.JLabel SignUp_Label;
    private javax.swing.JLabel Username_Label;
    private javax.swing.JTextField Username_TextField;
    // End of variables declaration//GEN-END:variables
}
